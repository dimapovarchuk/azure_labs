name: 'Terraform Manual Operations'

# Trigger workflow only manually
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action to perform'
        required: true
        type: choice
        options:
          - apply
          - destroy

# Environment variables for Terraform
env:
  # Azure authentication variables
  TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
  TF_VAR_tenant_id: ${{ secrets.TENANT_ID }}
  TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
  TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
  # VM credentials
  TF_VAR_vm_username: ${{ secrets.VM_USERNAME }}
  TF_VAR_vm_password: ${{ secrets.VM_PASSWORD }}
  # Azure authentication for backend
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

# Jobs to run
jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
    # Check out the repository code
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Install Terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    # Debug step to show root directory contents
    - name: Debug - Show Current Directory
      run: |
        pwd
        ls -la
        
    # Debug step to show lab_08 directory contents
    - name: Debug - Show Lab Directory
      run: |
        cd lab_08
        pwd
        ls -la

    # Create Storage Account and get access key
    - name: Setup Backend Storage
      run: |
        cd lab_08
        # Initialize without backend to create storage account
        terraform init -backend=false
        terraform apply -auto-approve -target=azurerm_storage_account.storage
        # Get storage account name and key
        STORAGE_ACCOUNT_NAME=$(terraform output -raw storage_account_name)
        STORAGE_KEY=$(terraform output -raw storage_account_key)
        # Set environment variables
        echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV
        echo "ARM_ACCESS_KEY=$STORAGE_KEY" >> $GITHUB_ENV

    # Initialize Terraform with backend
    - name: Terraform Init
      run: |
        cd lab_08
        terraform init \
          -backend-config="storage_account_name=$STORAGE_ACCOUNT_NAME" \
          -backend-config="access_key=$ARM_ACCESS_KEY"

    # Apply Terraform configuration
    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      run: |
        cd lab_08
        terraform plan
        terraform apply -auto-approve

    # Destroy Terraform infrastructure
    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      run: |
        cd lab_08
        terraform plan -destroy
        terraform destroy -auto-approve

    # Debug step to show final state
    - name: Show Final State
      if: always()
      run: |
        cd lab_08
        terraform show